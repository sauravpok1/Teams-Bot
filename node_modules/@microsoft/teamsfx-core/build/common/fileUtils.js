"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.readJson = void 0;
const tslib_1 = require("tslib");
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const fs_extra_1 = tslib_1.__importDefault(require("fs-extra"));
const path_1 = require("path");
const util_1 = require("util");
const core_1 = require("../core");
const telemetry_1 = require("./telemetry");
const sleep = util_1.promisify(setTimeout);
async function readJson(filePath) {
    if (!(await fs_extra_1.default.pathExists(filePath))) {
        throw new teamsfx_api_1.UserError("FileNotFoundError", `File not found, make sure you don't move the original file: ${filePath}`, core_1.CoreSource);
    }
    let rawError;
    for (let i = 0; i < 5; ++i) {
        try {
            const json = await fs_extra_1.default.readJson(filePath);
            return json;
        }
        catch (error) {
            rawError = error;
            await sleep(100);
        }
    }
    /**
     * failed, read raw content into userData field, which will be reported in issue body
     */
    const fxError = new teamsfx_api_1.SystemError(rawError, core_1.CoreSource, "ReadJsonError");
    const fileName = path_1.basename(filePath);
    fxError.message = `task '${core_1.currentStage}' failed because of ${fxError.name}(file:${fileName}):${fxError.message}, if your local file 'env.*.json' is not modified, please report to us by click 'Report Issue' button.`;
    let content = undefined;
    try {
        content = fs_extra_1.default.readFileSync(filePath, { encoding: "utf-8" });
    }
    catch (e) { }
    if (content)
        fxError.userData = `file: ${fileName}\n------------FILE START--------\n${content}\n------------FILE END----------`;
    telemetry_1.sendTelemetryErrorEvent(telemetry_1.Component.core, telemetry_1.TelemetryEvent.ReadJson, fxError);
    throw fxError;
}
exports.readJson = readJson;
//# sourceMappingURL=fileUtils.js.map