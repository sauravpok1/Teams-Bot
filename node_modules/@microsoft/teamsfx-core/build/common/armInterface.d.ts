import { Plugin } from "@microsoft/teamsfx-api";
export declare type ArmResourcePlugin = Pick<Plugin, "generateArmTemplates" | "updateArmTemplates">;
export declare type NamedArmResourcePlugin = {
    name: string;
} & ArmResourcePlugin;
export interface BicepOrchestrationTemplate {
    Content: string;
}
export interface BicepOrchestrationParameterTemplate extends BicepOrchestrationTemplate {
    ParameterJson?: Record<string, unknown>;
}
export interface BicepOrchestrationModuleTemplate extends BicepOrchestrationTemplate {
    Outputs?: {
        [OutputName: string]: string;
    };
}
export interface BicepModule {
    Content: string;
}
export interface BicepOrchestration {
    ParameterTemplate?: BicepOrchestrationParameterTemplate;
    VariableTemplate?: BicepOrchestrationTemplate;
    ModuleTemplate?: BicepOrchestrationModuleTemplate;
    OutputTemplate?: BicepOrchestrationTemplate;
}
export interface ArmTemplateResult extends Record<any, unknown> {
    Provision?: {
        Orchestration?: string;
        Modules?: {
            [moduleFileName: string]: string;
        };
    };
    Configuration?: {
        Orchestration?: string;
        Modules?: {
            [moduleFileName: string]: string;
        };
    };
    Reference?: Record<string, unknown>;
    Parameters?: Record<string, string>;
}
//# sourceMappingURL=armInterface.d.ts.map