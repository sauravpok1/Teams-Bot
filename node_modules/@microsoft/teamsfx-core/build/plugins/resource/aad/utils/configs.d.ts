import { PluginContext, ConfigValue } from "@microsoft/teamsfx-api";
export declare class ConfigUtils {
    static getAadConfig(ctx: PluginContext, key: string, isLocalDebug?: boolean): string | undefined;
    static getLocalDebugConfigOfOtherPlugins(ctx: PluginContext, key: string): string | undefined;
    static checkAndSaveConfig(ctx: PluginContext, key: string, value: ConfigValue, isLocalDebug?: boolean): void;
    static getPermissionRequest(ctx: PluginContext): Promise<string>;
}
export declare class ProvisionConfig {
    displayName?: string;
    permissionRequest?: string;
    clientId?: string;
    password?: string;
    objectId?: string;
    oauth2PermissionScopeId?: string;
    private isLocalDebug;
    constructor(isLocalDebug?: boolean);
    restoreConfigFromContext(ctx: PluginContext): Promise<void>;
    saveConfigIntoContext(ctx: PluginContext, tenantId: string): void;
    private static getOauthAuthority;
}
export declare class SetApplicationInContextConfig {
    frontendDomain?: string;
    botId?: string;
    clientId?: string;
    applicationIdUri?: string;
    private isLocalDebug;
    constructor(isLocalDebug?: boolean);
    restoreConfigFromContext(ctx: PluginContext): void;
    saveConfigIntoContext(ctx: PluginContext): void;
}
export declare class PostProvisionConfig {
    frontendEndpoint?: string;
    botEndpoint?: string;
    objectId?: string;
    applicationIdUri?: string;
    private isLocalDebug;
    constructor(isLocalDebug?: boolean);
    restoreConfigFromContext(ctx: PluginContext): Promise<void>;
}
export declare class UpdatePermissionConfig {
    objectId?: string;
    permissionRequest?: string;
    private isLocalDebug;
    constructor(isLocalDebug?: boolean);
    restoreConfigFromContext(ctx: PluginContext): Promise<void>;
}
export declare class CheckGrantPermissionConfig {
    objectId?: string;
    isGrantPermission: boolean;
    constructor(isGrantPermission?: boolean);
    restoreConfigFromContext(ctx: PluginContext): Promise<void>;
}
//# sourceMappingURL=configs.d.ts.map