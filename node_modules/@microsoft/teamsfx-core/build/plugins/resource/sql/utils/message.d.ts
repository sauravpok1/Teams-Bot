export declare class Message {
    static readonly startPreProvision: string;
    static readonly startProvision: string;
    static readonly startPostProvision: string;
    static readonly startGetQuestions: string;
    static readonly endPreProvision: string;
    static readonly endProvision: string;
    static readonly endPostProvision: string;
    static readonly endGetQuestions: string;
    static readonly checkProvider: string;
    static readonly provisionSql: string;
    static readonly provisionDatabase: string;
    static readonly checkSql: string;
    static readonly checkDatabase: string;
    static readonly checkAadAdmin: string;
    static readonly checkDatabaseUser: string;
    static readonly connectDatabase: string;
    static readonly skipCheckProvider: string;
    static readonly skipProvisionSql: string;
    static readonly skipProvisionDatabase: string;
    static readonly skipAddAadAdmin: string;
    static readonly skipAddUser: string;
    static readonly addFirewall: string;
    static readonly addSqlAadAdmin: string;
    static readonly addTable: string;
    static readonly registerResourceProviderFailed: (message: string) => string;
    static readonly addDatabaseUser: (name: string) => string;
    static readonly adminName: (name: string) => string;
    static readonly endpoint: (endpoint: string) => string;
    static readonly inputCheck: {
        sqlUserNameEmpty: string;
        sqlUserNameContainsSqlIdentifier: string;
        sqlUserNameContainsNonAlphanumeric: string;
        sqlUserNameStartWithNumber: string;
        sqlPasswordEmpty: string;
        sqlPasswordLengthLessThan8: string;
        sqlPasswordLengthGreatThan128: string;
        sqlPasswordMustContain3Categories: string;
        sqlPasswordCannotContainUserName: string;
        sqlPasswordMustMatch: string;
    };
}
//# sourceMappingURL=message.d.ts.map