import { AzureAccountProvider, GraphTokenProvider, LogProvider, PluginContext, TelemetryReporter } from "@microsoft/teamsfx-api";
import { ApimService } from "./services/apimService";
import { AadService } from "./services/aadService";
import { ApimManager } from "./managers/apimManager";
import { AadManager } from "./managers/aadManager";
import { IQuestionManager } from "./managers/questionManager";
import { TeamsAppAadManager } from "./managers/teamsAppAadManager";
import { ScaffoldManager } from "./managers/scaffoldManager";
import { ISolutionConfig } from "./config";
export declare class Factory {
    static buildApimManager(ctx: PluginContext): Promise<ApimManager>;
    static buildAadManager(ctx: PluginContext): Promise<AadManager>;
    static buildTeamsAppAadManager(ctx: PluginContext): Promise<TeamsAppAadManager>;
    static buildScaffoldManager(ctx: PluginContext): Promise<ScaffoldManager>;
    static buildQuestionManager(ctx: PluginContext): Promise<IQuestionManager>;
    static buildApimService(solutionConfig: ISolutionConfig, azureAccountProvider: AzureAccountProvider | undefined, telemetryReporter?: TelemetryReporter, logger?: LogProvider): Promise<ApimService>;
    static buildAadService(graphTokenProvider: GraphTokenProvider | undefined, telemetryReporter?: TelemetryReporter, logger?: LogProvider): Promise<AadService>;
}
//# sourceMappingURL=factory.d.ts.map