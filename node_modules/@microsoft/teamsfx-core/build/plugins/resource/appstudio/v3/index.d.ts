import { FxError, Result, v2, IComposeExtension, IBot, IConfigurableTab, IStaticTab, TeamsAppManifest } from "@microsoft/teamsfx-api";
import { AppStudioPlugin } from "../";
export declare class AppStudioPluginV3 {
    name: string;
    displayName: string;
    plugin: AppStudioPlugin;
    /**
     * Generate initial manifest template file, for both local debug & remote
     * @param ctx
     * @param inputs
     * @returns
     */
    init(ctx: v2.Context, inputs: v2.InputsWithProjectPath): Promise<Result<any, FxError>>;
    /**
     * Append capabilities to manifest templates
     * @param ctx
     * @param inputs
     * @param capabilities
     * @returns
     */
    addCapabilities(ctx: v2.Context, inputs: v2.InputsWithProjectPath, capabilities: ({
        name: "staticTab";
        snippet?: {
            local: IStaticTab;
            remote: IStaticTab;
        };
    } | {
        name: "configurableTab";
        snippet?: {
            local: IConfigurableTab;
            remote: IConfigurableTab;
        };
    } | {
        name: "Bot";
        snippet?: {
            local: IBot;
            remote: IBot;
        };
    } | {
        name: "MessageExtension";
        snippet?: {
            local: IComposeExtension;
            remote: IComposeExtension;
        };
    })[]): Promise<Result<any, FxError>>;
    /**
     * Should conside both local and remote
     * @returns
     */
    loadManifest(ctx: v2.Context, inputs: v2.InputsWithProjectPath): Promise<Result<{
        local: TeamsAppManifest;
        remote: TeamsAppManifest;
    }, FxError>>;
    /**
     * Save manifest template file
     * @param ctx ctx.manifest
     * @param inputs
     * @returns
     */
    SaveManifest(ctx: v2.Context, inputs: v2.InputsWithProjectPath, manifest: {
        local: TeamsAppManifest;
        remote: TeamsAppManifest;
    }): Promise<Result<any, FxError>>;
    /**
     * Load manifest template, and check if it exceeds the limit.
     * The limit of staticTab if 16, others are 1
     * Should check both local & remote manifest template file
     * @param capability
     * @returns
     */
    capabilityExceedLimit(ctx: v2.Context, inputs: v2.InputsWithProjectPath, capability: "staticTab" | "configurableTab" | "Bot" | "MessageExtension"): Promise<Result<boolean, FxError>>;
}
//# sourceMappingURL=index.d.ts.map