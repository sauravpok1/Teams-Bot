/// <reference types="node" />
import { LogProvider } from "@microsoft/teamsfx-api";
import { IAppDefinition, IUserList } from "./interfaces/IAppDefinition";
import { IPublishingAppDenition } from "./interfaces/IPublishingAppDefinition";
export declare namespace AppStudioClient {
    /**
     * Creates an app registration in app studio with the given archived file and returns the app definition.
     * @param {Buffer}  file - Zip file with manifest.json and two icons
     * @param {string}  appStudioToken
     * @param {LogProvider} logProvider
     * @returns {Promise<IAppDefinition>}
     */
    function createApp(file: Buffer, appStudioToken: string, logProvider?: LogProvider): Promise<IAppDefinition>;
    function getApp(teamsAppId: string, appStudioToken: string, logProvider?: LogProvider): Promise<IAppDefinition>;
    /**
     * Updates an existing app if it exists with the configuration given.  Returns whether or not it was successful.
     * @param {string}  teamsAppId
     * @param {IAppDefinition} appDefinition
     * @param {string}  appStudioToken
     * @param {LogProvider} logProvider
     * @param {string} colorIconContent - base64 encoded
     * @param {string} outlineIconContent - base64 encoded
     * @returns {Promise<IAppDefinition>}
     */
    function updateApp(teamsAppId: string, appDefinition: IAppDefinition, appStudioToken: string, logProvider?: LogProvider, colorIconContent?: string, outlineIconContent?: string): Promise<IAppDefinition>;
    function validateManifest(manifestString: string, appStudioToken: string): Promise<string[]>;
    /**
     * Publish Teams app to Teams App Catalog
     * @param teamsAppId
     * @param file
     * @param appStudioToken
     * @returns
     */
    function publishTeamsApp(teamsAppId: string, file: Buffer, appStudioToken: string): Promise<string>;
    /**
     * Update existed publish request
     * @param teamsAppId
     * @param file
     * @param appStudioToken
     * @returns
     */
    function publishTeamsAppUpdate(teamsAppId: string, file: Buffer, appStudioToken: string): Promise<string>;
    function getAppByTeamsAppId(teamsAppId: string, appStudioToken: string): Promise<IPublishingAppDenition | undefined>;
    function getUserList(teamsAppId: string, appStudioToken: string): Promise<IUserList[] | undefined>;
    function checkPermission(teamsAppId: string, appStudioToken: string, userObjectId: string): Promise<string>;
    function grantPermission(teamsAppId: string, appStudioToken: string, newUser: IUserList): Promise<void>;
}
//# sourceMappingURL=appStudio.d.ts.map