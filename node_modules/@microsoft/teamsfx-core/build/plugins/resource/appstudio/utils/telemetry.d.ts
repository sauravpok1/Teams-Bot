import { PluginContext, SystemError, UserError } from "@microsoft/teamsfx-api";
export declare enum TelemetryPropertyKey {
    component = "component",
    errorType = "error-type",
    errorCode = "error-code",
    errorMessage = "error-message",
    validationResult = "validation-result",
    updateExistingApp = "update",
    success = "success",
    appId = "appid",
    publishedAppId = "published-app-id",
    customizedKeys = "customized-manifest-keys"
}
export declare enum TelemetryEventName {
    scaffold = "scaffold",
    validateManifest = "validate-manifest",
    buildTeamsPackage = "build",
    publish = "publish",
    migrateV1Project = "migrate-v1-project",
    updateManifest = "update-manifest",
    provision = "provision",
    postProvision = "post-provision",
    checkPermission = "check-permission",
    grantPermission = "grant-permission",
    listCollaborator = "list-collaborator",
    localDebug = "local-debug"
}
export declare class TelemetryUtils {
    static ctx: PluginContext;
    static init(ctx: PluginContext): void;
    static sendStartEvent(eventName: string, properties?: {
        [key: string]: string;
    }, measurements?: {
        [key: string]: number;
    }): void;
    static sendSuccessEvent(eventName: string, properties?: {
        [key: string]: string;
    }, measurements?: {
        [key: string]: number;
    }): void;
    static sendErrorEvent(eventName: string, error: SystemError | UserError, properties?: {
        [key: string]: string;
    }, measurements?: {
        [key: string]: number;
    }): void;
}
//# sourceMappingURL=telemetry.d.ts.map