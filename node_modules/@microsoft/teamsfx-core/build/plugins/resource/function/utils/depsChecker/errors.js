"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.BackendExtensionsInstallError = exports.NodeNotSupportedError = exports.NodeNotFoundError = exports.DepsCheckerError = void 0;
// NOTE:
// DO NOT EDIT this file in function plugin.
// The source of truth of this file is in packages/vscode-extension/src/debug/depsChecker.
// If you need to edit this file, please edit it in the above folder
// and run the scripts (tools/depsChecker/copyfiles.sh or tools/depsChecker/copyfiles.ps1 according to your OS)
// to copy you changes to function plugin.
class DepsCheckerError extends Error {
    constructor(message, helpLink) {
        super(message);
        this.helpLink = helpLink;
        Object.setPrototypeOf(this, DepsCheckerError.prototype);
    }
}
exports.DepsCheckerError = DepsCheckerError;
class NodeNotFoundError extends DepsCheckerError {
    constructor(message, helpLink) {
        super(message, helpLink);
        Object.setPrototypeOf(this, NodeNotFoundError.prototype);
    }
}
exports.NodeNotFoundError = NodeNotFoundError;
class NodeNotSupportedError extends DepsCheckerError {
    constructor(message, helpLink) {
        super(message, helpLink);
        Object.setPrototypeOf(this, NodeNotSupportedError.prototype);
    }
}
exports.NodeNotSupportedError = NodeNotSupportedError;
class BackendExtensionsInstallError extends DepsCheckerError {
    constructor(message, helpLink) {
        super(message, helpLink);
        Object.setPrototypeOf(this, BackendExtensionsInstallError.prototype);
    }
}
exports.BackendExtensionsInstallError = BackendExtensionsInstallError;
//# sourceMappingURL=errors.js.map