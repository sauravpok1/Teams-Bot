import { PluginContext } from "@microsoft/teamsfx-api";
import { IDepsAdapter, IDepsChecker, IDepsTelemetry } from "./checker";
export declare class FuncPluginAdapter implements IDepsAdapter {
    private readonly downloadIndicatorInterval;
    private readonly _ctx;
    private readonly _telemetry;
    private readonly dotnetSettingKey;
    constructor(ctx: PluginContext, telemetry: IDepsTelemetry);
    displayLearnMore(message: string, link: string): Promise<boolean>;
    displayWarningMessage(message: string, buttonText: string, action: () => Promise<boolean>): Promise<boolean>;
    displayContinueWithLearnMore(message: string, link: string): Promise<boolean>;
    showOutputChannel(): void;
    getResourceDir(): string;
    dotnetCheckerEnabled(): Promise<boolean>;
    runWithProgressIndicator(callback: () => Promise<void>): Promise<void>;
    hasTeamsfxBackend(): Promise<boolean>;
    hasTeamsfxBot(): Promise<boolean>;
    funcToolCheckerEnabled(): Promise<boolean>;
    ngrokCheckerEnabled(): Promise<boolean>;
    nodeCheckerEnabled(): Promise<boolean>;
    handleDotnetError(error: Error): void;
    handleDotnetForLinux(checker: IDepsChecker): Promise<boolean>;
    generateMsg(messageTemplate: string, checkers: Array<IDepsChecker>): Promise<string>;
    private splitHelpLink;
}
//# sourceMappingURL=funcPluginAdapter.d.ts.map