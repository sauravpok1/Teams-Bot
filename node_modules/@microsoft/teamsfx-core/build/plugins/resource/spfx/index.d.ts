import { AzureSolutionSettings, FxError, Plugin, PluginContext, QTreeNode, Result, Stage } from "@microsoft/teamsfx-api";
import { SPFxPluginImpl } from "./plugin";
import "./v2";
export declare enum SPFXQuestionNames {
    framework_type = "spfx-framework-type",
    webpart_name = "spfx-webpart-name",
    webpart_desp = "spfx-webpart-desp"
}
export declare class SpfxPlugin implements Plugin {
    name: string;
    displayName: string;
    activate(solutionSettings: AzureSolutionSettings): boolean;
    spfxPluginImpl: SPFxPluginImpl;
    getQuestions(stage: Stage, ctx: PluginContext): Promise<Result<QTreeNode | undefined, FxError>>;
    postScaffold(ctx: PluginContext): Promise<Result<any, FxError>>;
    preDeploy(ctx: PluginContext): Promise<Result<any, FxError>>;
    deploy(ctx: PluginContext): Promise<Result<any, FxError>>;
    private runWithErrorHandling;
}
declare const _default: SpfxPlugin;
export default _default;
//# sourceMappingURL=index.d.ts.map