"use strict";
// Copyright (c) Microsoft Corporation.
Object.defineProperty(exports, "__esModule", { value: true });
exports.VersionFileNotExist = exports.ZipDownloadError = exports.EndpointInvalidError = exports.UnhandledError = exports.UpdateApplicationSettingsError = exports.ZipDeployError = exports.CreateWebAppError = exports.MissingSubscriptionRegistrationError = exports.FreeServerFarmsQuotaError = exports.CreateAppServicePlanError = exports.UnauthenticatedError = exports.NoConfigError = void 0;
exports.NoConfigError = {
    name: "NoConfigError",
    message: (pluginId, configKey) => `Failed to get config value of '${configKey}' from '${pluginId}'.`,
};
exports.UnauthenticatedError = {
    name: "UnauthenticatedError",
    message: () => "Failed to get user login information.",
};
exports.CreateAppServicePlanError = {
    name: "CreateAppServicePlanError",
    message: (message) => `Failed to create App Service plan: ${message}`,
};
exports.FreeServerFarmsQuotaError = {
    name: "FreeServerFarmsQuotaError",
    message: (message) => `Failed to create App Service plan: ${message}`,
};
exports.MissingSubscriptionRegistrationError = {
    name: "MissingSubscriptionRegistrationError",
    message: (message) => `Failed to create App Service plan: ${message}`,
};
exports.CreateWebAppError = {
    name: "CreateWebAppError",
    message: (message) => `Failed to create Web App: ${message}`,
};
exports.ZipDeployError = {
    name: "ZipDeployError",
    message: (message) => `Failed to deploy Simple Auth bits: ${message}`,
};
exports.UpdateApplicationSettingsError = {
    name: "UpdateApplicationSettingsError",
    message: (message) => `Failed to update application settings: ${message}`,
};
exports.UnhandledError = {
    name: "UnhandledError",
    message: (message) => `Unhandled error: ${message}`,
};
exports.EndpointInvalidError = {
    name: "EndpointInvalidError",
    message: (endpoint, message) => `Failed to verify endpoint: ${endpoint}. Reason: ${message}`,
};
exports.ZipDownloadError = {
    name: "ZipDownloadError",
    message: (message) => `Failed to download Simple Auth bits: ${message}`,
};
exports.VersionFileNotExist = {
    name: "VersionFileNotExist",
    message: (filePath) => `Failed to load version file from ${filePath !== null && filePath !== void 0 ? filePath : "File not exist."}`,
};
//# sourceMappingURL=errors.js.map