export declare class Messages {
    static readonly SomethingIsInvalidWithValue: (something: string, value: string) => string;
    static readonly InputValidValueForSomething: (something: string) => string;
    static readonly SomethingIsMissing: (something: string) => string;
    static readonly SomethingIsNotFound: (something: string) => string;
    static readonly SomethingIsNotExisting: (something: string) => string;
    static readonly SomethingIsInWrongFormat: (something: string) => string;
    static readonly FailToCreateSomeClient: (clientName: string) => string;
    static readonly FailToProvisionSomeResource: (resource: string) => string;
    static readonly FailToUpdateConfigs: (something: string) => string;
    static readonly FailToListPublishingCredentials = "Failed to list publishing credentials.";
    static readonly FailToDoZipDeploy = "Failed to deploy zip file.";
    static readonly FailToUpdateMessageEndpoint: (endpoint: string) => string;
    static readonly FailToDownloadFrom: (url: string) => string;
    static readonly FailToFindSomethingFor: (something: string, forsth: string) => string;
    static readonly ClickHelpButtonForDetails = "Please click 'Get Help' button for more details.";
    static readonly ClickIssueButtonToReportIssue = "Please click 'Report Issue' button to report the issue.";
    static readonly CommandExecutionFailed: (command: string) => string;
    static readonly DoSthBeforeSth: (sth: string, beforeSth: string) => string;
    static readonly FailToCallAppStudioForCheckingAADApp = "Failed to call App Studio's api to check AAD application's existence.";
    static readonly SuccessfullyRetrievedTemplateZip: (zipUrl: string) => string;
    static readonly FallingBackToUseLocalTemplateZip = "Falling back to use local template zip.";
    static readonly ResourceProviderExist: (rp: string) => string;
    static readonly BotResourceExist: (where: string) => string;
    static readonly WorkingDirIsMissing = "Working directory is missing.";
    static readonly FailToGetAzureCreds = "Failed to retrieve Azure credentials.";
    static readonly TryLoginAzure = "Login to Azure.";
    static readonly SkipDeployNoUpdates = "Skipping deployment: no updates found.";
    static readonly PreScaffoldingBot = "Pre-scaffolding bot.";
    static readonly ScaffoldingBot = "Scaffolding bot.";
    static readonly SuccessfullyScaffoldedBot = "Successfully scaffolded bot.";
    static readonly PreProvisioningBot = "Pre-provisioning bot.";
    static readonly ProvisioningBot = "Provisioning bot.";
    static readonly SuccessfullyProvisionedBot = "Successfully provisioned bot.";
    static readonly PreDeployingBot = "Pre-deploying bot.";
    static readonly DeployingBot = "Deploying bot.";
    static readonly SuccessfullyDeployedBot = "Successfully deployed bot.";
    static readonly GeneratingArmTemplatesBot = "Generating ARM templates of bot.";
    static readonly SuccessfullyGenerateArmTemplatesBot = "Successfully generating ARM templates of bot.";
    static readonly UpdatingArmTemplatesBot = "Updating ARM templates of bot.";
    static readonly SuccessfullyUpdateArmTemplatesBot = "Successfully updating ARM templates of bot.";
    static readonly SuccessfullyGetExistingBotAadAppCredential = "Successfully get existing bot AAD app credential.";
    static readonly SuccessfullyCreatedBotAadApp = "Successfully created bot AAD app.";
    static readonly ProvisioningAzureBotChannelRegistration = "Provisioning azure bot channel registration.";
    static readonly SuccessfullyProvisionedAzureBotChannelRegistration = "Successfully provisioned azure bot channel registration.";
    static readonly ProvisioningMsTeamsChannel = "Provisioning microsoft teams channel.";
    static readonly SuccessfullyProvisionedMsTeamsChannel = "Successfully provisioned microsoft teams channel.";
    static readonly ProvisioningAzureAppServicePlan = "Provisioning azure app service plan.";
    static readonly SuccessfullyProvisionedAzureAppServicePlan = "Successfully provisioned azure app service plan.";
    static readonly ProvisioningAzureWebApp = "Provisioning azure web app.";
    static readonly SuccessfullyProvisionedAzureWebApp = "Successfully provisioned azure web app.";
    static readonly UpdatingAzureWebAppSettings = "Updating azure web app's app settings.";
    static readonly SuccessfullyUpdatedAzureWebAppSettings = "Successfully updated azure web app's app settings.";
    static readonly UpdatingBotMessageEndpoint = "Updating bot's message endpoint.";
    static readonly SuccessfullyUpdatedBotMessageEndpoint = "Successfully updated bot's message endpoint";
    static readonly ProvisioningAADApp = "Provisioning aad app.";
    static readonly SuccessfullyProvisionedAADApp = "Successfully provisioned aad app.";
    static readonly ProvisioningBotRegistration = "Provisioning bot registration.";
    static readonly SuccessfullyProvisionedBotRegistration = "Successfully provisioned bot registration.";
    static readonly TheSubsNotRegisterToUseBotService = "The subscription didn't register to use namespace 'Microsoft.BotService'.";
    static readonly MaxFreeAppServicePlanIsTen = "The maximum number of Free App Service Plan allowed in a Subscription is 10.";
    static readonly RetryTheCurrentStep = "Please retry the current step.";
    static readonly RegisterYouSubsToUseBot = "Please register your subscription to use namespace 'Microsoft.BotService'.";
    static readonly DeleteFreeAppServicePlanOrChangeSku = "Delete a free app service plan or change app service plan's sku in config file and retry.";
    static readonly RecoverConfig = "Please recover the config value.";
    static readonly RecreateTheProject = "Please recreate the project.";
    static readonly CheckCommandOutputAndTryToFixIt = "Please check the command output and try to fix it.";
    static readonly DeleteExistingBotChannelRegistration = "Please delete existing azure bot channel registrations.";
    static readonly DeleteBotAfterAzureAccountSwitching = "If azure account is switched, don't forget to delete azure bot channel registration under the previous account.";
    static readonly CheckOutputLogAndTryToFix = "Please check log in output channel and try to fix this issue.";
    static readonly RegisterRequiredRP: (resourceProviders: string[]) => string;
    static readonly ReopenWorkingDir: (path?: string) => string;
    static readonly PostProvisioningStart = "Start to Post Provision.";
    static readonly SuccessfullyPostProvisionedBot = "Successfully post-provisioned bot.";
    static readonly StartMigrateV1Project: (name: string) => string;
    static readonly EndMigrateV1Project: (name: string) => string;
    static readonly RollbackToV1Project: string;
}
//# sourceMappingURL=messages.d.ts.map