import { OptionItem } from "@microsoft/teamsfx-api";
export declare class RegularExprs {
    static readonly CHARS_TO_BE_SKIPPED: RegExp;
    static readonly RESOURCE_SUFFIX: RegExp;
    static readonly APP_SERVICE_PLAN_NAME: RegExp;
    static readonly WEB_APP_SITE_NAME: RegExp;
    static readonly BOT_CHANNEL_REG_NAME: RegExp;
}
export declare class WebAppConstants {
    static readonly WEB_APP_SITE_DOMAIN: string;
    static readonly APP_SERVICE_PLAN_DEFAULT_SKU_NAME = "F1";
}
export declare class AADRegistrationConstants {
    static readonly GRAPH_REST_BASE_URL: string;
    static readonly AZURE_AD_MULTIPLE_ORGS: string;
}
export declare class ScaffoldPlaceholders {
    static readonly BOT_ID: string;
    static readonly BOT_PASSWORD: string;
    static readonly TEAMS_APP_ID: string;
    static readonly TEAMS_APP_SECRET: string;
    static readonly OAUTH_AUTHORITY: string;
}
export declare class TemplateProjectsConstants {
    static readonly GROUP_NAME_BOT: string;
    static readonly TEMPLATE_FOLDER_NAME: string;
    static readonly GROUP_NAME_MSGEXT: string;
    static readonly GROUP_NAME_BOT_MSGEXT: string;
    static readonly DEFAULT_SCENARIO_NAME: string;
    static readonly VERSION_RANGE: string;
}
export declare class ProgressBarConstants {
    static readonly SCAFFOLD_TITLE: string;
    static readonly SCAFFOLD_STEP_START = "Scaffolding bot.";
    static readonly SCAFFOLD_STEP_FETCH_ZIP = "Retrieving templates.";
    static readonly SCAFFOLD_STEP_UNZIP = "Extracting templates target folder.";
    static readonly SCAFFOLD_STEPS_NUM: number;
    static readonly PROVISION_TITLE: string;
    static readonly PROVISION_STEP_START = "Provisioning bot.";
    static readonly PROVISION_STEP_BOT_REG = "Registering bot.";
    static readonly PROVISION_STEP_WEB_APP = "Provisioning Azure Web App.";
    static readonly PROVISION_STEPS_NUM: number;
    static readonly LOCAL_DEBUG_TITLE: string;
    static readonly LOCAL_DEBUG_STEP_START = "Provisioning bot for local debug.";
    static readonly LOCAL_DEBUG_STEP_BOT_REG = "Registering bot.";
    static readonly LOCAL_DEBUG_STEPS_NUM: number;
    static readonly DEPLOY_TITLE: string;
    static readonly DEPLOY_STEP_START = "Deploying bot.";
    static readonly DEPLOY_STEP_NPM_INSTALL = "Installing dependencies.";
    static readonly DEPLOY_STEP_ZIP_FOLDER = "Creating application package.";
    static readonly DEPLOY_STEP_ZIP_DEPLOY = "Uploading application package.";
    static readonly DEPLOY_STEPS_NUM: number;
    static readonly MIGRATE_V1_PROJECT_TITLE = "Migrating Bot";
    static readonly MIGRATE_V1_PROJECT_STEP_MIGRATE = "Migrating Bot project.";
    static readonly MIGRATE_V1_PROJECT_STEPS_NUM: number;
}
export declare class QuestionNames {
    static readonly PROGRAMMING_LANGUAGE = "programming-language";
    static readonly GET_BOT_ID = "bot-id";
    static readonly GET_BOT_PASSWORD = "bot-password";
    static readonly CAPABILITIES = "capabilities";
}
export declare class LifecycleFuncNames {
    static readonly PRE_SCAFFOLD = "pre-scaffold";
    static readonly SCAFFOLD = "scaffold";
    static readonly POST_SCAFFOLD = "post-scaffold";
    static readonly PRE_PROVISION = "pre-provision";
    static readonly PROVISION = "provision";
    static readonly POST_PROVISION = "post-provision";
    static readonly PRE_DEPLOY = "pre-deploy";
    static readonly DEPLOY = "deploy";
    static readonly POST_DEPLOY = "post-deploy";
    static readonly LOCAL_DEBUG = "local-debug";
    static readonly POST_LOCAL_DEBUG = "post-local-debug";
    static readonly GENERATE_ARM_TEMPLATES = "generate-arm-templates";
    static readonly PROVISION_WEB_APP = "provisionWebApp";
    static readonly UPDATE_MESSAGE_ENDPOINT_AZURE = "updateMessageEndpointOnAzure";
    static readonly UPDATE_MESSAGE_ENDPOINT_APPSTUDIO = "updateMessageEndpointOnAppStudio";
    static readonly REUSE_EXISTING_BOT_REG = "reuseExistingBotRegistration";
    static readonly CREATE_NEW_BOT_REG_AZURE = "createNewBotRegistrationOnAzure";
    static readonly CREATE_NEW_BOT_REG_APPSTUDIO = "createNewBotRegistrationOnAppStudio";
    static readonly CHECK_AAD_APP = "checkAADApp";
    static readonly MIGRATE_V1_PROJECT = "migrateV1Project";
}
export declare class Retry {
    static readonly RETRY_TIMES = 10;
    static readonly BACKOFF_TIME_MS = 5000;
}
export declare class ErrorNames {
    static readonly PRECONDITION_ERROR = "PreconditionError";
    static readonly CLIENT_CREATION_ERROR = "ClientCreationError";
    static readonly PROVISION_ERROR = "ProvisionError";
    static readonly CONFIG_UPDATING_ERROR = "ConfigUpdatingError";
    static readonly CONFIG_VALIDATION_ERROR = "ConfigValidationError";
    static readonly LIST_PUBLISHING_CREDENTIALS_ERROR = "ListPublishingCredentialsError";
    static readonly ZIP_DEPLOY_ERROR = "ZipDeployError";
    static readonly MSG_ENDPOINT_UPDATING_ERROR = "MessageEndpointUpdatingError";
    static readonly DOWNLOAD_ERROR = "DownloadError";
    static readonly MANIFEST_FORMAT_ERROR = "TemplateManifestFormatError";
    static readonly TEMPLATE_PROJECT_NOT_FOUND_ERROR = "TemplateProjectNotFoundError";
    static readonly LANGUAGE_STRATEGY_NOT_FOUND_ERROR = "LanguageStrategyNotFoundError";
    static readonly COMMAND_EXECUTION_ERROR = "CommandExecutionError";
    static readonly CALL_APPSTUDIO_API_ERROR = "CallAppStudioAPIError";
    static readonly USER_INPUTS_ERROR = "UserInputsError";
    static readonly PACK_DIR_EXISTENCE_ERROR = "PackDirectoryExistenceError";
    static readonly MISSING_SUBSCRIPTION_REGISTRATION_ERROR = "MissingSubscriptionRegistrationError";
    static readonly FREE_SERVER_FARMS_QUOTA_ERROR = "FreeServerFarmsQuotaError";
    static readonly INVALID_BOT_DATA_ERROR = "InvalidBotDataError";
}
export declare class Links {
    static readonly ISSUE_LINK = "https://github.com/OfficeDev/TeamsFx/issues/new";
    static readonly HELP_LINK = "https://aka.ms/teamsfx-bot-help";
    static readonly UPDATE_MESSAGE_ENDPOINT: string;
}
export declare class Alias {
    static readonly TEAMS_BOT_PLUGIN = "BT";
    static readonly TEAMS_FX = "Teamsfx";
}
export declare class QuestionOptions {
    static readonly PROGRAMMING_LANGUAGE_OPTIONS: OptionItem[];
}
export declare class AuthEnvNames {
    static readonly BOT_ID = "BOT_ID";
    static readonly BOT_PASSWORD = "BOT_PASSWORD";
    static readonly M365_CLIENT_ID = "M365_CLIENT_ID";
    static readonly M365_CLIENT_SECRET = "M365_CLIENT_SECRET";
    static readonly M365_TENANT_ID = "M365_TENANT_ID";
    static readonly M365_AUTHORITY_HOST = "M365_AUTHORITY_HOST";
    static readonly INITIATE_LOGIN_ENDPOINT = "INITIATE_LOGIN_ENDPOINT";
    static readonly M365_APPLICATION_ID_URI = "M365_APPLICATION_ID_URI";
    static readonly SQL_ENDPOINT = "SQL_ENDPOINT";
    static readonly SQL_DATABASE_NAME = "SQL_DATABASE_NAME";
    static readonly SQL_USER_NAME = "SQL_USER_NAME";
    static readonly SQL_PASSWORD = "SQL_PASSWORD";
    static readonly IDENTITY_ID = "IDENTITY_ID";
    static readonly API_ENDPOINT = "API_ENDPOINT";
}
export declare class AuthValues {
    static readonly M365_AUTHORITY_HOST = "https://login.microsoftonline.com";
}
export declare class DeployConfigs {
    static readonly UN_PACK_DIRS: string[];
    static readonly DEPLOYMENT_FOLDER = ".deployment";
    static readonly DEPLOYMENT_CONFIG_FILE = "bot.json";
    static readonly WALK_SKIP_PATHS: string[];
}
export declare class ConfigKeys {
    static readonly SITE_NAME = "siteName";
    static readonly SITE_ENDPOINT = "siteEndpoint";
    static readonly APP_SERVICE_PLAN = "appServicePlan";
    static readonly BOT_CHANNEL_REG_NAME = "botChannelRegName";
}
export declare class FolderNames {
    static readonly NODE_MODULES = "node_modules";
    static readonly KEYTAR = "keytar";
}
export declare class TypeNames {
    static readonly NUMBER = "number";
}
export declare class DownloadConstants {
    static readonly DEFAULT_TIMEOUT_MS: number;
    static readonly TEMPLATES_TIMEOUT_MS: number;
}
export declare class MaxLengths {
    static readonly BOT_CHANNEL_REG_NAME = 42;
    static readonly WEB_APP_SITE_NAME = 60;
    static readonly APP_SERVICE_PLAN_NAME = 40;
    static readonly AAD_DISPLAY_NAME = 120;
}
export declare class ErrorMessagesForChecking {
    static readonly FreeServerFarmsQuotaErrorFromAzure = "The maximum number of Free ServerFarms allowed in a Subscription is 10";
}
export declare class IdentityConstants {
    static readonly IDENTITY_TYPE_USER_ASSIGNED = "UserAssigned";
}
export declare class TelemetryKeys {
    static readonly Component = "component";
    static readonly Success = "success";
    static readonly ErrorType = "error-type";
    static readonly ErrorMessage = "error-message";
    static readonly ErrorCode = "error-code";
    static readonly AppId = "appid";
}
export declare class TelemetryValues {
    static readonly Success = "yes";
    static readonly Fail = "no";
    static readonly UserError = "user";
    static readonly SystemError = "system";
}
export declare class AzureConstants {
    static readonly requiredResourceProviders: string[];
}
export declare class PathInfo {
    static readonly BicepTemplateRelativeDir: string;
    static readonly ProvisionModuleTemplateFileName = "botProvision.template.bicep";
    static readonly ConfigurationModuleTemplateFileName = "botConfiguration.template.bicep";
}
export declare class BotBicep {
    static readonly resourceId: string;
    static readonly hostName: string;
    static readonly webAppEndpoint: string;
}
//# sourceMappingURL=constants.d.ts.map