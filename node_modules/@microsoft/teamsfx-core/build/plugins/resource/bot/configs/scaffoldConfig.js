"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScaffoldConfig = void 0;
const tslib_1 = require("tslib");
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
const utils = tslib_1.__importStar(require("../utils/common"));
const strings_1 = require("../resources/strings");
const common_1 = require("../../../../common");
const programmingLanguage_1 = require("../enums/programmingLanguage");
const path_1 = tslib_1.__importDefault(require("path"));
class ScaffoldConfig {
    botAADCreated() {
        if (this.botId && this.botPassword) {
            return true;
        }
        return false;
    }
    async restoreConfigFromContext(context) {
        var _a, _b, _c, _d, _e;
        this.workingDir = path_1.default.join(context.root, strings_1.CommonStrings.BOT_WORKING_DIR_NAME);
        this.botId = context.config.get(strings_1.PluginBot.BOT_ID);
        this.botPassword = context.config.get(strings_1.PluginBot.BOT_PASSWORD);
        this.objectId = context.config.get(strings_1.PluginBot.OBJECT_ID);
        if (common_1.isMultiEnvEnabled()) {
            this.botId = (_b = (_a = context.envInfo.config.bot) === null || _a === void 0 ? void 0 : _a.appId) !== null && _b !== void 0 ? _b : this.botId;
            this.botPassword = (_d = (_c = context.envInfo.config.bot) === null || _c === void 0 ? void 0 : _c.appPassword) !== null && _d !== void 0 ? _d : this.botPassword;
        }
        const rawProgrammingLanguage = (_e = context.projectSettings) === null || _e === void 0 ? void 0 : _e.programmingLanguage;
        if (rawProgrammingLanguage &&
            utils.existsInEnumValues(rawProgrammingLanguage, programmingLanguage_1.ProgrammingLanguage)) {
            this.programmingLanguage = rawProgrammingLanguage;
        }
    }
    saveConfigIntoContext(context) {
        utils.checkAndSaveConfig(context, strings_1.PluginBot.BOT_ID, this.botId);
        utils.checkAndSaveConfig(context, strings_1.PluginBot.BOT_PASSWORD, this.botPassword);
        utils.checkAndSaveConfig(context, strings_1.PluginBot.OBJECT_ID, this.objectId);
    }
}
exports.ScaffoldConfig = ScaffoldConfig;
//# sourceMappingURL=scaffoldConfig.js.map