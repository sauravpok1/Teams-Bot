"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AzureLib = exports.AzureClientFactory = void 0;
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
const arm_resources_1 = require("@azure/arm-resources");
class AzureClientFactory {
    static getResourceProviderClient(credentials, subscriptionId) {
        return new arm_resources_1.Providers(new arm_resources_1.ResourceManagementClientContext(credentials, subscriptionId));
    }
}
exports.AzureClientFactory = AzureClientFactory;
class AzureLib {
    static async ensureResource(createFn, findFn) {
        const _t = await (findFn === null || findFn === void 0 ? void 0 : findFn());
        return _t !== null && _t !== void 0 ? _t : createFn();
    }
    static async findResourceProvider(client, namespace) {
        const provider = await client.get(namespace);
        if (provider.registrationState === "Registered") {
            return provider;
        }
    }
    static async ensureResourceProviders(client, providerNamespaces) {
        return Promise.all(providerNamespaces.map((namespace) => AzureLib.ensureResource(() => client.register(namespace), () => AzureLib.findResourceProvider(client, namespace))));
    }
}
exports.AzureLib = AzureLib;
//# sourceMappingURL=azure-client.js.map