import { IProgressHandler, PluginContext } from "@microsoft/teamsfx-api";
export declare const ScaffoldSteps: {
    Scaffold: string;
};
export declare const ProvisionSteps: {
    RegisterResourceProvider: string;
    CreateStorage: string;
    Configure: string;
};
export declare const PostProvisionSteps: {
    EnableStaticWebsite: string;
};
export declare const PreDeploySteps: {
    CheckStorage: string;
};
export declare const DeploySteps: {
    NPMInstall: string;
    Build: string;
    getSrcAndDest: string;
    Clear: string;
    Upload: string;
};
export declare const MigrateSteps: {
    Migrate: string;
};
export declare class ProgressHelper {
    static scaffoldProgress: IProgressHandler | undefined;
    static provisionProgress: IProgressHandler | undefined;
    static postProvisionProgress: IProgressHandler | undefined;
    static preDeployProgress: IProgressHandler | undefined;
    static deployProgress: IProgressHandler | undefined;
    static migrateProgress: IProgressHandler | undefined;
    static startScaffoldProgressHandler(ctx: PluginContext): Promise<IProgressHandler | undefined>;
    static startPostProvisionProgressHandler(ctx: PluginContext): Promise<IProgressHandler | undefined>;
    static startProvisionProgressHandler(ctx: PluginContext): Promise<IProgressHandler | undefined>;
    static createPreDeployProgressHandler(ctx: PluginContext): Promise<IProgressHandler | undefined>;
    static startDeployProgressHandler(ctx: PluginContext): Promise<IProgressHandler | undefined>;
    static startMigrateProgressHandler(ctx: PluginContext): Promise<IProgressHandler | undefined>;
    static endAllHandlers(success: boolean): Promise<void>;
    static endScaffoldProgress(success: boolean): Promise<void>;
    static endProvisionProgress(success: boolean): Promise<void>;
    static endPostProvisionProgress(success: boolean): Promise<void>;
    static endPreDeployProgress(success: boolean): Promise<void>;
    static endDeployProgress(success: boolean): Promise<void>;
    static endMigrateProgress(success: boolean): Promise<void>;
}
//# sourceMappingURL=progress-helper.d.ts.map