import { PluginContext, ReadonlyPluginConfig } from "@microsoft/teamsfx-api";
import { TeamsFxResult } from "./error-factory";
import { WebSiteManagementModels } from "@azure/arm-appservice";
declare type Site = WebSiteManagementModels.Site;
export interface BlazorPluginConfig {
    resourceGroupName?: string;
    subscriptionId?: string;
    resourceNameSuffix?: string;
    location?: string;
    webAppName?: string;
    appServicePlanName?: string;
    endpoint?: string;
    domain?: string;
    projectFilePath?: string;
    webAppResourceId?: string;
    site?: Site;
}
export declare class BlazorPluginImpl {
    config: BlazorPluginConfig;
    private syncConfigFromContext;
    private syncConfigToContext;
    private checkAndGet;
    private isPluginEnabled;
    preProvision(ctx: PluginContext): Promise<TeamsFxResult>;
    provision(ctx: PluginContext): Promise<TeamsFxResult>;
    postProvision(ctx: PluginContext): Promise<TeamsFxResult>;
    collectAppSettings(ctx: PluginContext, site: Site): void;
    collectAppSettingsSelf(site: Site): void;
    collectAppSettingsFromBot(site: Site, botConfig: ReadonlyPluginConfig): void;
    collectAppSettingsFromAAD(site: Site, aadConfig: ReadonlyPluginConfig): void;
    pushAppSettings(site: Site, newName: string, newValue: string, replace?: boolean): void;
    deploy(ctx: PluginContext): Promise<TeamsFxResult>;
}
export {};
//# sourceMappingURL=plugin.d.ts.map