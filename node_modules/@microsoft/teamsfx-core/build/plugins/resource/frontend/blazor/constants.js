"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlazorConfigInfo = exports.DependentPluginInfo = exports.BlazorCommands = exports.BlazorPathInfo = exports.BlazorPluginInfo = exports.DefaultProvisionConfigs = exports.RegularExpr = exports.AzureInfo = exports.Constants = void 0;
const tslib_1 = require("tslib");
const path_1 = tslib_1.__importDefault(require("path"));
class Constants {
}
exports.Constants = Constants;
Constants.emptyString = "";
class AzureInfo {
}
exports.AzureInfo = AzureInfo;
AzureInfo.webappNameLenMax = 24;
AzureInfo.suffixLenMax = 12;
AzureInfo.zipDeployURL = (appName) => `https://${appName}.scm.azurewebsites.net/api/zipdeploy`;
// TODO: static readonly requiredResourceProviders = ["Microsoft.Web"];
AzureInfo.aadMetadataAddress = (tenantId) => `https://login.microsoftonline.com/${tenantId}/v2.0/.well-known/openid-configuration`;
class RegularExpr {
}
exports.RegularExpr = RegularExpr;
RegularExpr.allCharToBeSkippedInName = /[^a-zA-Z0-9]/g;
RegularExpr.targetFramework = /(?<=<TargetFramework>)(.*)(?=<)/gim;
class DefaultProvisionConfigs {
}
exports.DefaultProvisionConfigs = DefaultProvisionConfigs;
DefaultProvisionConfigs.appServicePlansConfig = (location) => ({
    location: location,
    kind: "app",
    sku: {
        name: "B1",
    },
});
DefaultProvisionConfigs.webAppConfig = (location) => ({
    kind: "app",
    location: location,
    sku: {
        name: "B1",
    },
});
class BlazorPluginInfo {
}
exports.BlazorPluginInfo = BlazorPluginInfo;
BlazorPluginInfo.pluginName = "fx-resource-blazor";
BlazorPluginInfo.displayName = "Blazor";
BlazorPluginInfo.alias = "bz";
BlazorPluginInfo.issueLink = "https://github.com/OfficeDev/TeamsFx/issues/new";
BlazorPluginInfo.helpLink = "https://aka.ms/teamsfx-bz-help";
BlazorPluginInfo.persistentConfig = [
    "webAppName",
    "appServicePlanName",
    "endpoint",
    "domain",
    "projectFilePath",
];
BlazorPluginInfo.defaultFramework = "net6.0";
BlazorPluginInfo.defaultRuntime = "win-x86";
class BlazorPathInfo {
}
exports.BlazorPathInfo = BlazorPathInfo;
BlazorPathInfo.publishFolderPath = (workingPath, framework = BlazorPluginInfo.defaultFramework, runtime = BlazorPluginInfo.defaultRuntime) => path_1.default.join(workingPath, "bin", "Release", framework, runtime, "publish");
class BlazorCommands {
}
exports.BlazorCommands = BlazorCommands;
BlazorCommands.buildRelease = (runtime) => `dotnet publish --configuration Release --runtime ${runtime} --self-contained`;
class DependentPluginInfo {
}
exports.DependentPluginInfo = DependentPluginInfo;
DependentPluginInfo.solutionPluginName = "solution";
DependentPluginInfo.subscriptionId = "subscriptionId";
DependentPluginInfo.resourceGroupName = "resourceGroupName";
DependentPluginInfo.resourceNameSuffix = "resourceNameSuffix";
DependentPluginInfo.location = "location";
DependentPluginInfo.remoteTeamsAppId = "remoteTeamsAppId";
DependentPluginInfo.functionPluginName = "fx-resource-function";
DependentPluginInfo.functionEndpoint = "functionEndpoint";
DependentPluginInfo.runtimePluginName = "fx-resource-simple-auth";
DependentPluginInfo.runtimeEndpoint = "endpoint";
DependentPluginInfo.startLoginPageURL = "auth-start.html";
DependentPluginInfo.aadPluginName = "fx-resource-aad-app-for-teams";
DependentPluginInfo.clientID = "clientId";
DependentPluginInfo.tenantId = "tenantId";
DependentPluginInfo.aadClientSecret = "clientSecret";
DependentPluginInfo.oauthHost = "oauthHost";
DependentPluginInfo.applicationIdUris = "applicationIdUris";
DependentPluginInfo.botPluginName = "fx-resource-bot";
DependentPluginInfo.botId = "botId";
DependentPluginInfo.botPassword = "botPassword";
class BlazorConfigInfo {
}
exports.BlazorConfigInfo = BlazorConfigInfo;
BlazorConfigInfo.webAppName = "webAppName";
BlazorConfigInfo.appServicePlanName = "appServicePlanName";
BlazorConfigInfo.webAppEndpoint = "endpoint";
BlazorConfigInfo.webAppDomain = "domain";
BlazorConfigInfo.projectFilePath = "projectFilePath";
//# sourceMappingURL=constants.js.map