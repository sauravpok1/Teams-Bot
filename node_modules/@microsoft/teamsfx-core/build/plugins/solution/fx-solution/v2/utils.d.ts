import { v2, Inputs, FxError, Result, AzureSolutionSettings, Void, PermissionRequestProvider, Json, SolutionContext, Plugin, AppStudioTokenProvider } from "@microsoft/teamsfx-api";
import { PluginsWithContext } from "../solution";
export declare function getSelectedPlugins(azureSettings: AzureSolutionSettings): v2.ResourcePlugin[];
export declare function getAzureSolutionSettings(ctx: v2.Context): AzureSolutionSettings;
export declare function isAzureProject(azureSettings: AzureSolutionSettings): boolean;
export declare function combineRecords<T>(records: {
    name: string;
    result: T;
}[]): Record<string, T>;
export declare function extractSolutionInputs(record: Json): v2.SolutionInputs;
export declare function reloadV2Plugins(solutionSettings: AzureSolutionSettings): v2.ResourcePlugin[];
export declare function ensurePermissionRequest(solutionSettings: AzureSolutionSettings, permissionRequestProvider: PermissionRequestProvider): Promise<Result<Void, FxError>>;
export declare function parseTeamsAppTenantId(appStudioToken?: Record<string, unknown>): Result<string, FxError>;
export declare function parseUserName(appStudioToken?: Record<string, unknown>): Result<string, FxError>;
export declare function checkWhetherLocalDebugM365TenantMatches(localDebugTenantId?: string, appStudioTokenProvider?: AppStudioTokenProvider): Promise<Result<Void, FxError>>;
export declare function loadTeamsAppTenantIdForLocal(localSettings: v2.LocalSettings, appStudioToken?: Record<string, unknown>): Result<Void, FxError>;
export declare function fillInSolutionSettings(solutionSettings: AzureSolutionSettings, answers: Inputs): Result<Void, FxError>;
export declare function checkWetherProvisionSucceeded(config: Json): boolean;
export declare function getPluginAndContextArray(ctx: SolutionContext, selectedPlugins: Plugin[]): PluginsWithContext[];
//# sourceMappingURL=utils.d.ts.map