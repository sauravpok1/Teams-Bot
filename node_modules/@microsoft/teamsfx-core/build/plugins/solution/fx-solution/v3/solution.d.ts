import { v3 } from "@microsoft/teamsfx-api";
import { addModule, getQuestionsForAddModule } from "./addModule";
import { addResource, getQuestionsForAddResource } from "./addResource";
import { deploy, getQuestionsForDeploy } from "./deploy";
import { getQuestionsForInit, init } from "./init";
import { getQuestionsForProvision, provisionResources } from "./provision";
import { getQuestionsForLocalProvision, provisionLocalResources } from "./provisionLocal";
import { getQuestionsForPublish, publishApplication } from "./publish";
import { getQuestionsForScaffold, scaffold } from "./scaffold";
import { executeUserTask, getQuestionsForUserTask } from "./userTask";
export declare class TeamsFxAzureSolution implements v3.ISolution {
    name: string;
    getQuestionsForInit: typeof getQuestionsForInit;
    init: typeof init;
    getQuestionsForScaffold: typeof getQuestionsForScaffold;
    scaffold: typeof scaffold;
    getQuestionsForAddResource: typeof getQuestionsForAddResource;
    addResource: typeof addResource;
    getQuestionsForAddModule: typeof getQuestionsForAddModule;
    addModule: typeof addModule;
    getQuestionsForProvision: typeof getQuestionsForProvision;
    provisionResources: typeof provisionResources;
    getQuestionsForLocalProvision: typeof getQuestionsForLocalProvision;
    provisionLocalResources: typeof provisionLocalResources;
    getQuestionsForDeploy: typeof getQuestionsForDeploy;
    deploy: typeof deploy;
    getQuestionsForPublish: typeof getQuestionsForPublish;
    publishApplication: typeof publishApplication;
    getQuestionsForUserTask: typeof getQuestionsForUserTask;
    executeUserTask: typeof executeUserTask;
}
//# sourceMappingURL=solution.d.ts.map