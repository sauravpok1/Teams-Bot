// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScaffoldLocalDebugSettingsV1Error = exports.InvalidLocalBotEndpointFormat = exports.LocalBotEndpointNotConfigured = exports.NgrokTunnelNotConnected = exports.ConfigLocalDebugSettingsError = exports.SetupLocalDebugSettingsError = exports.ScaffoldLocalDebugSettingsError = void 0;
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const constants_1 = require("../constants");
function ScaffoldLocalDebugSettingsError(error) {
    return teamsfx_api_1.returnSystemError(error, constants_1.SolutionSource, "ScaffoldLocalDebugSettingsError");
}
exports.ScaffoldLocalDebugSettingsError = ScaffoldLocalDebugSettingsError;
function SetupLocalDebugSettingsError(error) {
    return teamsfx_api_1.returnSystemError(error, constants_1.SolutionSource, "SetupLocalDebugSettingsError");
}
exports.SetupLocalDebugSettingsError = SetupLocalDebugSettingsError;
function ConfigLocalDebugSettingsError(error) {
    return teamsfx_api_1.returnSystemError(error, constants_1.SolutionSource, "ConfigLocalDebugSettingsError");
}
exports.ConfigLocalDebugSettingsError = ConfigLocalDebugSettingsError;
function NgrokTunnelNotConnected() {
    return teamsfx_api_1.returnUserError(new Error("Ngrok tunnel is not connected. Check your network settings and try again."), constants_1.SolutionSource, "NgrokTunnelNotConnected", "https://aka.ms/teamsfx-localdebug");
}
exports.NgrokTunnelNotConnected = NgrokTunnelNotConnected;
function LocalBotEndpointNotConfigured() {
    return teamsfx_api_1.returnUserError(new Error('Local bot endpoint is not configured. Set "fx-resource-local-debug.localBotEndpoint" in ".fx/default.user.data" and try again.'), constants_1.SolutionSource, "LocalBotEndpointNotConfigured");
}
exports.LocalBotEndpointNotConfigured = LocalBotEndpointNotConfigured;
function InvalidLocalBotEndpointFormat(localBotEndpoint) {
    return teamsfx_api_1.returnUserError(new Error(`Local bot endpoint format is invalid: ${localBotEndpoint}.`), constants_1.SolutionSource, "InvalidLocalBotEndpointFormat");
}
exports.InvalidLocalBotEndpointFormat = InvalidLocalBotEndpointFormat;
function ScaffoldLocalDebugSettingsV1Error() {
    return teamsfx_api_1.returnSystemError(new Error("Failed to convert api v1 context to v2 context."), constants_1.SolutionSource, "ScaffoldLocalDebugSettingsV1Error");
}
exports.ScaffoldLocalDebugSettingsV1Error = ScaffoldLocalDebugSettingsV1Error;
//# sourceMappingURL=error.js.map