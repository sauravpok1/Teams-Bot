"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.addModule = void 0;
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const error_1 = require("./error");
async function addModule(ctx, localSettings, inputs) {
    const solutionSettings = ctx.projectSetting.solutionSettings;
    const module = {
        capabilities: inputs.capabilities || [],
    };
    const capSet = new Set();
    solutionSettings.modules.forEach((m) => m.capabilities.forEach((c) => capSet.add(c)));
    for (const cap of inputs.capabilities || []) {
        if (capSet.has(cap)) {
            ctx.userInteraction.showMessage("warn", "Add module is not supported for SPFx project!", false);
            return teamsfx_api_1.err(new error_1.AddModuleNotSupportedError());
        }
        else {
            capSet.add(cap);
        }
    }
    solutionSettings.capabilities = Array.from(capSet);
    solutionSettings.modules.push(module);
    return teamsfx_api_1.ok(teamsfx_api_1.Void);
}
exports.addModule = addModule;
//# sourceMappingURL=addModule.js.map